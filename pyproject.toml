[project]
name = "multimodal-ai-bot"
version = "0.1.0"
description = "Мультимодальный ИИ-консультант для Telegram с поддержкой локальных моделей"
requires-python = ">=3.11"
dependencies = [
    "aiogram>=3.7.0",
    "aiohttp>=3.9.5",
    "python-dotenv>=1.0.1",
    "psutil>=5.9.0",
    "pillow>=10.0.0",
    "opencv-python>=4.8.0",
    "speechrecognition>=3.10.0",
    "pyttsx3>=2.90",
    "openai-whisper>=20231117",
    "sqlalchemy>=2.0.0",
    "redis>=5.0.0",
    "cryptography>=41.0.0",
    "numpy>=1.24.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
dev = [
    "black>=24.4.2",
    "flake8>=7.0.0",
    "mypy>=1.10.0",
    "pytest>=8.2.2",
    "pytest-asyncio>=0.23.7",
    "pytest-cov>=4.1.0",
]

local-models = [
    "ollama>=0.1.0",
    "diffusers>=0.24.0",
    "transformers>=4.35.0",
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "accelerate>=0.24.0",
]

cloud-models = [
    "openai>=1.0.0",
    "anthropic>=0.7.0",
]

audio = [
    "pydub>=0.25.0",
    "librosa>=0.10.0",
    "soundfile>=0.12.0",
]

vision = [
    "opencv-python>=4.8.0",
    "imageio>=2.31.0",
    "scikit-image>=0.21.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py311']

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose"
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "src/__pycache__/*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError"
]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "flake8>=7.3.0",
    "mypy>=1.17.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
]

local-models = [
    "ollama>=0.1.0",
    "diffusers>=0.24.0",
    "transformers>=4.35.0",
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "accelerate>=0.24.0",
]

cloud-models = [
    "openai>=1.0.0",
    "anthropic>=0.7.0",
]

audio = [
    "pydub>=0.25.0",
    "librosa>=0.10.0",
    "soundfile>=0.12.0",
]

vision = [
    "opencv-python>=4.8.0",
    "imageio>=2.31.0",
    "scikit-image>=0.21.0",
]
